name: Python versions build test

on:
  push:
    branches: ["main", "dev"]
    paths: ["**.py", "requirements.txt"]
  pull_request:
    branches: ["main", "dev"]
    paths: ["**.py", "requirements.txt"]
  workflow_dispatch:

jobs:
  call-build-muscle:
    uses: ./.github/workflows/build-muscle.yml

  call-build-aster:
    uses: ./.github/workflows/build-aster.yml

  call-build-fasttree:
    uses: ./.github/workflows/build-fasttree.yml

  call-build-raxml:
    uses: ./.github/workflows/build-raxml.yml

  call-build-iqtree:
    uses: ./.github/workflows/build-iqtree.yml

  test_pythons:
    name: Test on different python versions
    runs-on: ubuntu-latest
    needs:
      [
        call-build-muscle,
        call-build-aster,
        call-build-fasttree,
        call-build-raxml,
        call-build-iqtree,
      ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=30 --max-line-length=130 --statistics --ignore=E203,W503,E402

      - name: Install package
        run: pip install .

      - name: Cache muscle
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/muscle
          key: ${{ runner.os }}-muscle

      - name: Cache ASTER
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/astral
          key: ${{ runner.os }}-ASTER

      - name: Cache FastTree
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/FastTree
          key: ${{ runner.os }}-FastTree

      - name: Cache RAxML
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/raxmlHPC-PTHREADS-AVX2
          key: ${{ runner.os }}-RAxML

      - name: Cache IQTree
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/iqtree2
          key: ${{ runner.os }}-IQTree

      - name: Export to PATH and verify
        run: |
          export PATH=$PATH:$HOME/.local/bin
          which muscle
          which FastTree
          which raxmlHPC-PTHREADS-AVX2
          which iqtree2
          which astral

      - name: Test with pytest
        run: pytest --runslow -vv
